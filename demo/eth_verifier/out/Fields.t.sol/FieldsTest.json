{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_add_base",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_add_scalar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b5061108a8061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063916a17c61161008c578063d0ce104a11610066578063d0ce104a14610169578063e20c9f7114610173578063ee3249291461017b578063fa7626d41461018357600080fd5b8063916a17c614610141578063b5508aa914610149578063ba414fa61461015157600080fd5b80631ed7831c146100d45780632ade3880146100f25780633e5e3c23146101075780633f7286f41461010f57806366d9a9a01461011757806385226c811461012c575b600080fd5b6100dc610190565b6040516100e99190610cc3565b60405180910390f35b6100fa6101f2565b6040516100e99190610d60565b6100dc610334565b6100dc610394565b61011f6103f4565b6040516100e99190610e20565b6101346104da565b6040516100e99190610ed3565b61011f6105aa565b610134610690565b610159610760565b60405190151581526020016100e9565b61017161088d565b005b6100dc610975565b6101716109d5565b6007546101599060ff1681565b606060148054806020026020016040519081016040528092919081815260200182805480156101e857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101ca575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101561032b57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101561031457838290600052602060002001805461028790610f35565b80601f01602080910402602001604051908101604052809291908181526020018280546102b390610f35565b80156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b505050505081526020019060010190610268565b505050508152505081526020019060010190610216565b50505050905090565b606060168054806020026020016040519081016040528092919081815260200182805480156101e8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101ca575050505050905090565b606060158054806020026020016040519081016040528092919081815260200182805480156101e8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101ca575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101561032b5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156104c257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116104845790505b50505050508152505081526020019060010190610418565b60606018805480602002602001604051908101604052809291908181526020016000905b8282101561032b57838290600052602060002001805461051d90610f35565b80601f016020809104026020016040519081016040528092919081815260200182805461054990610f35565b80156105965780601f1061056b57610100808354040283529160200191610596565b820191906000526020600020905b81548152906001019060200180831161057957829003601f168201915b5050505050815260200190600101906104fe565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101561032b5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561067857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161063a5790505b505050505081525050815260200190600101906105ce565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101561032b5783829060005260206000200180546106d390610f35565b80601f01602080910402602001604051908101604052809291908181526020018280546106ff90610f35565b801561074c5780601f106107215761010080835404028352916020019161074c565b820191906000526020600020905b81548152906001019060200180831161072f57829003601f168201915b5050505050815260200190600101906106b4565b600754600090610100900460ff16156107825750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156108885760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610810917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610f6f565b60408051601f198184030181529082905261082a91610fa0565b6000604051808303816000865af19150503d8060008114610867576040519150601f19603f3d011682016040523d82523d6000602084013e61086c565b606091505b50915050808060200190518101906108849190610fbc565b9150505b919050565b60006108ba60017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610fe5565b60405163771602f760e01b81526004810182905260016024820181905291925060009073__$c8ea0941b863e47b3d1473500b3ea3402b$__9063771602f7906044015b602060405180830381865af415801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e919061100c565b90506109708160006040518060400160405280600c81526020016b070203d3d2030206d6f6420760a41b815250610a49565b505050565b606060138054806020026020016040519081016040528092919081815260200182805480156101e8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101ca575050505050905090565b6000610a0260017f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001610fe5565b60405163771602f760e01b81526004810182905260016024820181905291925060009073__$46bc5188a1170288ddf118419e58df64b9$__9063771602f7906044016108fd565b818314610970577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610a7f9190611025565b60405180910390a16109708383808214610bb3577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610afd9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610bb3610bb7565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610cb25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610c519291602001610f6f565b60408051601f1981840301815290829052610c6b91610fa0565b6000604051808303816000865af19150503d8060008114610ca8576040519150601f19603f3d011682016040523d82523d6000602084013e610cad565b606091505b505050505b6007805461ff001916610100179055565b6020808252825182820181905260009190848201906040850190845b81811015610d045783516001600160a01b031683529284019291840191600101610cdf565b50909695505050505050565b60005b83811015610d2b578181015183820152602001610d13565b50506000910152565b60008151808452610d4c816020860160208601610d10565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015610e1057603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015610dfa57605f19898503018352610de8848651610d34565b948e01949350918d0191600101610dcc565b505050978a019794505091880191600101610d87565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610ec457898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610eaf5783516001600160e01b0319168252928b019260019290920191908b0190610e85565b50978a01979550505091870191600101610e48565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610f2857603f19888603018452610f16858351610d34565b94509285019290850190600101610efa565b5092979650505050505050565b600181811c90821680610f4957607f821691505b602082108103610f6957634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610f92816004850160208701610d10565b919091016004019392505050565b60008251610fb2818460208701610d10565b9190910192915050565b600060208284031215610fce57600080fd5b81518015158114610fde57600080fd5b9392505050565b8181038181111561100657634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121561101e57600080fd5b5051919050565b60408152600560408201526422b93937b960d91b6060820152608060208201526000610fde6080830184610d3456fea2646970667358221220c86309e722dbca389529a8f10a33e9fa9e2db55abf3a64a2671287f94b80483f64736f6c63430008150033",
    "sourceMap": "316:532:25:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:4;;;;;;;;;;;316:532:25;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/Fields.sol": {
        "Base": [
          {
            "start": 2332,
            "length": 20
          }
        ],
        "Scalar": [
          {
            "start": 2660,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063916a17c61161008c578063d0ce104a11610066578063d0ce104a14610169578063e20c9f7114610173578063ee3249291461017b578063fa7626d41461018357600080fd5b8063916a17c614610141578063b5508aa914610149578063ba414fa61461015157600080fd5b80631ed7831c146100d45780632ade3880146100f25780633e5e3c23146101075780633f7286f41461010f57806366d9a9a01461011757806385226c811461012c575b600080fd5b6100dc610190565b6040516100e99190610cc3565b60405180910390f35b6100fa6101f2565b6040516100e99190610d60565b6100dc610334565b6100dc610394565b61011f6103f4565b6040516100e99190610e20565b6101346104da565b6040516100e99190610ed3565b61011f6105aa565b610134610690565b610159610760565b60405190151581526020016100e9565b61017161088d565b005b6100dc610975565b6101716109d5565b6007546101599060ff1681565b606060148054806020026020016040519081016040528092919081815260200182805480156101e857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101ca575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101561032b57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101561031457838290600052602060002001805461028790610f35565b80601f01602080910402602001604051908101604052809291908181526020018280546102b390610f35565b80156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b505050505081526020019060010190610268565b505050508152505081526020019060010190610216565b50505050905090565b606060168054806020026020016040519081016040528092919081815260200182805480156101e8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101ca575050505050905090565b606060158054806020026020016040519081016040528092919081815260200182805480156101e8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101ca575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101561032b5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156104c257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116104845790505b50505050508152505081526020019060010190610418565b60606018805480602002602001604051908101604052809291908181526020016000905b8282101561032b57838290600052602060002001805461051d90610f35565b80601f016020809104026020016040519081016040528092919081815260200182805461054990610f35565b80156105965780601f1061056b57610100808354040283529160200191610596565b820191906000526020600020905b81548152906001019060200180831161057957829003601f168201915b5050505050815260200190600101906104fe565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101561032b5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561067857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161063a5790505b505050505081525050815260200190600101906105ce565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101561032b5783829060005260206000200180546106d390610f35565b80601f01602080910402602001604051908101604052809291908181526020018280546106ff90610f35565b801561074c5780601f106107215761010080835404028352916020019161074c565b820191906000526020600020905b81548152906001019060200180831161072f57829003601f168201915b5050505050815260200190600101906106b4565b600754600090610100900460ff16156107825750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156108885760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610810917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610f6f565b60408051601f198184030181529082905261082a91610fa0565b6000604051808303816000865af19150503d8060008114610867576040519150601f19603f3d011682016040523d82523d6000602084013e61086c565b606091505b50915050808060200190518101906108849190610fbc565b9150505b919050565b60006108ba60017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610fe5565b60405163771602f760e01b81526004810182905260016024820181905291925060009073__$c8ea0941b863e47b3d1473500b3ea3402b$__9063771602f7906044015b602060405180830381865af415801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e919061100c565b90506109708160006040518060400160405280600c81526020016b070203d3d2030206d6f6420760a41b815250610a49565b505050565b606060138054806020026020016040519081016040528092919081815260200182805480156101e8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101ca575050505050905090565b6000610a0260017f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001610fe5565b60405163771602f760e01b81526004810182905260016024820181905291925060009073__$46bc5188a1170288ddf118419e58df64b9$__9063771602f7906044016108fd565b818314610970577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610a7f9190611025565b60405180910390a16109708383808214610bb3577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610afd9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610bb3610bb7565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610cb25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610c519291602001610f6f565b60408051601f1981840301815290829052610c6b91610fa0565b6000604051808303816000865af19150503d8060008114610ca8576040519150601f19603f3d011682016040523d82523d6000602084013e610cad565b606091505b505050505b6007805461ff001916610100179055565b6020808252825182820181905260009190848201906040850190845b81811015610d045783516001600160a01b031683529284019291840191600101610cdf565b50909695505050505050565b60005b83811015610d2b578181015183820152602001610d13565b50506000910152565b60008151808452610d4c816020860160208601610d10565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015610e1057603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015610dfa57605f19898503018352610de8848651610d34565b948e01949350918d0191600101610dcc565b505050978a019794505091880191600101610d87565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610ec457898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610eaf5783516001600160e01b0319168252928b019260019290920191908b0190610e85565b50978a01979550505091870191600101610e48565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610f2857603f19888603018452610f16858351610d34565b94509285019290850190600101610efa565b5092979650505050505050565b600181811c90821680610f4957607f821691505b602082108103610f6957634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610f92816004850160208701610d10565b919091016004019392505050565b60008251610fb2818460208701610d10565b9190910192915050565b600060208284031215610fce57600080fd5b81518015158114610fde57600080fd5b9392505050565b8181038181111561100657634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121561101e57600080fd5b5051919050565b60408152600560408201526422b93937b960d91b6060820152608060208201526000610fde6080830184610d3456fea2646970667358221220c86309e722dbca389529a8f10a33e9fa9e2db55abf3a64a2671287f94b80483f64736f6c63430008150033",
    "sourceMap": "316:532:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:134:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3360:151;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;2738:178::-;;;:::i;:::-;;;;;;;:::i;2592:140::-;;;:::i;:::-;;;;;;;:::i;3069:146::-;;;:::i;2157:141::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;5500:14:27;;5493:22;5475:41;;5463:2;5448:18;1819:584:0;5335:187:27;350:237:25;;;:::i;:::-;;2304:142:7;;;:::i;593:253:25:-;;;:::i;1572:26:0:-;;;;;;;;;2452:134:7;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:7;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:7;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:7;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2738:178::-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:141;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6086:51:27;;;-1:-1:-1;;;6153:18:27;;;6146:34;2196:43:0;;;;;;;;;6059:18:27;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;350:237:25:-;392:9;417:16;432:1;273:77:22;417:16:25;:::i;:::-;505:10;;-1:-1:-1;;;505:10:25;;;;;7614:25:27;;;471:1:25;7655:18:27;;;7648:34;;;392:42:25;;-1:-1:-1;444:11:25;;505:5;;;;7587:18:27;;505:10:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;484:31;;525:55;549:10;562:1;525:55;;;;;;;;;;;;;-1:-1:-1;;;525:55:25;;;:8;:55::i;:::-;382:205;;;350:237::o;2304:142:7:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:7;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;593:253:25:-;637:11;666:18;683:1;1080:77:22;666:18:25;:::i;:::-;762:10;;-1:-1:-1;;;762:10:25;;;;;7614:25:27;;;726:1:25;7655:18:27;;;7648:34;;;637:48:25;;-1:-1:-1;695:13:25;;762:5;;;;7587:18:27;;762:10:25;7384:304:27;5476:178:0;5557:1;5552;:6;5548:100;;5579:30;5605:3;5579:30;;;;;;:::i;:::-;;;;;;;;5623:14;5632:1;5635;5271;5266;:6;5262:203;;5293:41;;;;;9081:2:27;9063:21;;;9120:2;9100:18;;;9093:30;9159:34;9154:2;9139:18;;9132:62;-1:-1:-1;;;9225:2:27;9210:18;;9203:32;9267:3;9252:19;;8879:398;5293:41:0;;;;;;;;5353:31;;;9494:21:27;;;9551:2;9531:18;;;9524:30;-1:-1:-1;;;9585:2:27;9570:18;;9563:40;9670:4;9655:20;;9648:36;;;5353:31:0;;;;;;;9635:3:27;5353:31:0;;;5403;;;9907:21:27;;;9964:2;9944:18;;;9937:30;-1:-1:-1;;;9998:2:27;9983:18;;9976:40;10083:4;10068:20;;10061:36;;;5403:31:0;;;;;;;10048:3:27;5403:31:0;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;10310:51:27;;;-1:-1:-1;;;10377:18:27;;;10370:34;;;;2712:4:0;10420:18:27;;;10413:34;2489:11:0;;1671:64;2586:43;;10283:18:27;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;14:658:27:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:27;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:27;;14:658;-1:-1:-1;;;;;;14:658:27:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:27;901:16;;894:27;677:250::o;932:271::-;974:3;1012:5;1006:12;1039:6;1034:3;1027:19;1055:76;1124:6;1117:4;1112:3;1108:14;1101:4;1094:5;1090:16;1055:76;:::i;:::-;1185:2;1164:15;-1:-1:-1;;1160:29:27;1151:39;;;;1192:4;1147:50;;932:271;-1:-1:-1;;932:271:27:o;1208:1742::-;1441:2;1493:21;;;1563:13;;1466:18;;;1585:22;;;1412:4;;1441:2;1626;;1644:18;;;;1681:1;1724:15;;;1709:31;;1705:40;;1768:15;;;1412:4;;1832:1089;1848:6;1843:3;1840:15;1832:1089;;;-1:-1:-1;;1917:22:27;;;1913:36;1901:49;;1973:13;;2060:9;;-1:-1:-1;;;;;2056:35:27;2041:51;;2131:11;;2125:18;2163:15;;;2156:27;;;2244:19;;2013:15;;;2276:24;;;2457:21;;;;2323:2;2405:17;;;2393:30;;2389:39;;;2347:15;;;;2502:1;2516:296;2532:8;2527:3;2524:17;2516:296;;;2638:2;2634:7;2625:6;2617;2613:19;2609:33;2602:5;2595:48;2670:42;2705:6;2694:8;2688:15;2670:42;:::i;:::-;2741:17;;;;2660:52;-1:-1:-1;2784:14:27;;;;2560:1;2551:11;2516:296;;;-1:-1:-1;;;2899:12:27;;;;2835:6;-1:-1:-1;;2864:15:27;;;;1874:1;1865:11;1832:1089;;;-1:-1:-1;2938:6:27;;1208:1742;-1:-1:-1;;;;;;;;;;1208:1742:27:o;2955:1567::-;3157:4;3186:2;3226;3215:9;3211:18;3256:2;3245:9;3238:21;3279:6;3314;3308:13;3345:6;3337;3330:22;3371:2;3361:12;;3404:2;3393:9;3389:18;3382:25;;3466:2;3456:6;3453:1;3449:14;3438:9;3434:30;3430:39;3504:2;3496:6;3492:15;3525:1;3546;3556:937;3572:6;3567:3;3564:15;3556:937;;;3641:22;;;-1:-1:-1;;3637:36:27;3625:49;;3697:13;;3784:9;;-1:-1:-1;;;;;3780:35:27;3765:51;;3855:11;;3849:18;3887:15;;;3880:27;;;3968:19;;3737:15;;;4000:24;;;4090:21;;;;4135:1;;4058:2;4046:15;;;4149:236;4165:8;4160:3;4157:17;4149:236;;;4246:15;;-1:-1:-1;;;;;;4242:42:27;4228:57;;4354:17;;;;4193:1;4184:11;;;;;4311:14;;;;4149:236;;;-1:-1:-1;4471:12:27;;;;4408:5;-1:-1:-1;;;4436:15:27;;;;3598:1;3589:11;3556:937;;;-1:-1:-1;4510:6:27;;2955:1567;-1:-1:-1;;;;;;;;;2955:1567:27:o;4527:803::-;4689:4;4718:2;4758;4747:9;4743:18;4788:2;4777:9;4770:21;4811:6;4846;4840:13;4877:6;4869;4862:22;4915:2;4904:9;4900:18;4893:25;;4977:2;4967:6;4964:1;4960:14;4949:9;4945:30;4941:39;4927:53;;5015:2;5007:6;5003:15;5036:1;5046:255;5060:6;5057:1;5054:13;5046:255;;;5153:2;5149:7;5137:9;5129:6;5125:22;5121:36;5116:3;5109:49;5181:40;5214:6;5205;5199:13;5181:40;:::i;:::-;5171:50;-1:-1:-1;5279:12:27;;;;5244:15;;;;5082:1;5075:9;5046:255;;;-1:-1:-1;5318:6:27;;4527:803;-1:-1:-1;;;;;;;4527:803:27:o;5527:380::-;5606:1;5602:12;;;;5649;;;5670:61;;5724:4;5716:6;5712:17;5702:27;;5670:61;5777:2;5769:6;5766:14;5746:18;5743:38;5740:161;;5823:10;5818:3;5814:20;5811:1;5804:31;5858:4;5855:1;5848:15;5886:4;5883:1;5876:15;5740:161;;5527:380;;;:::o;6191:384::-;-1:-1:-1;;;;;;6376:33:27;;6364:46;;6433:13;;6346:3;;6455:74;6433:13;6518:1;6509:11;;6502:4;6490:17;;6455:74;:::i;:::-;6549:16;;;;6567:1;6545:24;;6191:384;-1:-1:-1;;;6191:384:27:o;6580:287::-;6709:3;6747:6;6741:13;6763:66;6822:6;6817:3;6810:4;6802:6;6798:17;6763:66;:::i;:::-;6845:16;;;;;6580:287;-1:-1:-1;;6580:287:27:o;6872:277::-;6939:6;6992:2;6980:9;6971:7;6967:23;6963:32;6960:52;;;7008:1;7005;6998:12;6960:52;7040:9;7034:16;7093:5;7086:13;7079:21;7072:5;7069:32;7059:60;;7115:1;7112;7105:12;7059:60;7138:5;6872:277;-1:-1:-1;;;6872:277:27:o;7154:225::-;7221:9;;;7242:11;;;7239:134;;;7295:10;7290:3;7286:20;7283:1;7276:31;7330:4;7327:1;7320:15;7358:4;7355:1;7348:15;7239:134;7154:225;;;;:::o;7693:208::-;7787:6;7840:2;7828:9;7819:7;7815:23;7811:32;7808:52;;;7856:1;7853;7846:12;7808:52;-1:-1:-1;7879:16:27;;7693:208;-1:-1:-1;7693:208:27:o;8428:446::-;8678:2;8667:9;8660:21;8717:1;8712:2;8701:9;8697:18;8690:29;-1:-1:-1;;;8750:2:27;8739:9;8735:18;8728:35;8801:3;8794:4;8783:9;8779:20;8772:33;8641:4;8822:46;8863:3;8852:9;8848:19;8840:6;8822:46;:::i",
    "linkReferences": {
      "src/Fields.sol": {
        "Base": [
          {
            "start": 2271,
            "length": 20
          }
        ],
        "Scalar": [
          {
            "start": 2599,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_add_base()": "d0ce104a",
    "test_add_scalar()": "ee324929"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_add_base\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_add_scalar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Fields.t.sol\":\"FieldsTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"src/Fields.sol\":{\"keccak256\":\"0x3611cacd4f49cdca155f7895443de4dc8f052addeefd59a7ea4d77133859f5f5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://403cb1c734a5e34dd869b82b3350cf9ab1812965ece40674890d606ac495d3f7\",\"dweb:/ipfs/QmVaAD6BSAT2n7VwbSb1SCSyZSqGUuHvVPYBtrcyrGkK3s\"]},\"test/Fields.t.sol\":{\"keccak256\":\"0x102d479bda7083b3e0f6370325cef7c9e9b99db7cb39a2b85ac15d84ac17f687\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c67cc465d619b29e3048ee696a5dd8fbd7fafa39eaf4e669375f1cf7d5fe3e3c\",\"dweb:/ipfs/QmaqrC8qTTLUU7WAksMTbw14SLExoimw8oY1Do7Uq9FWDb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_add_base"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_add_scalar"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Fields.t.sol": "FieldsTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "src/Fields.sol": {
        "keccak256": "0x3611cacd4f49cdca155f7895443de4dc8f052addeefd59a7ea4d77133859f5f5",
        "urls": [
          "bzz-raw://403cb1c734a5e34dd869b82b3350cf9ab1812965ece40674890d606ac495d3f7",
          "dweb:/ipfs/QmVaAD6BSAT2n7VwbSb1SCSyZSqGUuHvVPYBtrcyrGkK3s"
        ],
        "license": "GPL-3.0"
      },
      "test/Fields.t.sol": {
        "keccak256": "0x102d479bda7083b3e0f6370325cef7c9e9b99db7cb39a2b85ac15d84ac17f687",
        "urls": [
          "bzz-raw://c67cc465d619b29e3048ee696a5dd8fbd7fafa39eaf4e669375f1cf7d5fe3e3c",
          "dweb:/ipfs/QmaqrC8qTTLUU7WAksMTbw14SLExoimw8oY1Do7Uq9FWDb"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Fields.t.sol",
    "id": 43906,
    "exportedSymbols": {
      "Base": [
        43679
      ],
      "FieldsTest": [
        43905
      ],
      "Scalar": [
        43735
      ],
      "Test": [
        12254
      ],
      "console": [
        22024
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:810:25",
    "nodes": [
      {
        "id": 43785,
        "nodeType": "PragmaDirective",
        "src": "39:24:25",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 43787,
        "nodeType": "ImportDirective",
        "src": "65:41:25",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43906,
        "sourceUnit": 12255,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43786,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12254,
              "src": "73:4:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43789,
        "nodeType": "ImportDirective",
        "src": "107:46:25",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43906,
        "sourceUnit": 22025,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43788,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22024,
              "src": "115:7:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43792,
        "nodeType": "ImportDirective",
        "src": "154:47:25",
        "nodes": [],
        "absolutePath": "src/Fields.sol",
        "file": "../src/Fields.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43906,
        "sourceUnit": 43736,
        "symbolAliases": [
          {
            "foreign": {
              "id": 43790,
              "name": "Scalar",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43735,
              "src": "162:6:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 43791,
              "name": "Base",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43679,
              "src": "170:4:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43798,
        "nodeType": "UsingForDirective",
        "src": "203:51:25",
        "nodes": [],
        "functionList": [
          {
            "function": {
              "id": 43793,
              "name": "Base.add",
              "nameLocations": [
                "211:4:25",
                "216:3:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43649,
              "src": "211:8:25"
            }
          },
          {
            "function": {
              "id": 43794,
              "name": "Base.mul",
              "nameLocations": [
                "221:4:25",
                "226:3:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43663,
              "src": "221:8:25"
            }
          },
          {
            "function": {
              "id": 43795,
              "name": "Base.inv",
              "nameLocations": [
                "231:4:25",
                "236:3:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43678,
              "src": "231:8:25"
            }
          }
        ],
        "global": false,
        "typeName": {
          "id": 43797,
          "nodeType": "UserDefinedTypeName",
          "pathNode": {
            "id": 43796,
            "name": "Base.FE",
            "nameLocations": [
              "246:4:25",
              "251:2:25"
            ],
            "nodeType": "IdentifierPath",
            "referencedDeclaration": 43626,
            "src": "246:7:25"
          },
          "referencedDeclaration": 43626,
          "src": "246:7:25",
          "typeDescriptions": {
            "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
            "typeString": "Base.FE"
          }
        }
      },
      {
        "id": 43804,
        "nodeType": "UsingForDirective",
        "src": "255:59:25",
        "nodes": [],
        "functionList": [
          {
            "function": {
              "id": 43799,
              "name": "Scalar.add",
              "nameLocations": [
                "263:6:25",
                "270:3:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43705,
              "src": "263:10:25"
            }
          },
          {
            "function": {
              "id": 43800,
              "name": "Scalar.mul",
              "nameLocations": [
                "275:6:25",
                "282:3:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43719,
              "src": "275:10:25"
            }
          },
          {
            "function": {
              "id": 43801,
              "name": "Scalar.inv",
              "nameLocations": [
                "287:6:25",
                "294:3:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43734,
              "src": "287:10:25"
            }
          }
        ],
        "global": false,
        "typeName": {
          "id": 43803,
          "nodeType": "UserDefinedTypeName",
          "pathNode": {
            "id": 43802,
            "name": "Scalar.FE",
            "nameLocations": [
              "304:6:25",
              "311:2:25"
            ],
            "nodeType": "IdentifierPath",
            "referencedDeclaration": 43682,
            "src": "304:9:25"
          },
          "referencedDeclaration": 43682,
          "src": "304:9:25",
          "typeDescriptions": {
            "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
            "typeString": "Scalar.FE"
          }
        }
      },
      {
        "id": 43905,
        "nodeType": "ContractDefinition",
        "src": "316:532:25",
        "nodes": [
          {
            "id": 43855,
            "nodeType": "FunctionDefinition",
            "src": "350:237:25",
            "nodes": [],
            "body": {
              "id": 43854,
              "nodeType": "Block",
              "src": "382:205:25",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    43813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43813,
                      "mutability": "mutable",
                      "name": "q",
                      "nameLocation": "400:1:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 43854,
                      "src": "392:9:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                        "typeString": "Base.FE"
                      },
                      "typeName": {
                        "id": 43812,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 43811,
                          "name": "Base.FE",
                          "nameLocations": [
                            "392:4:25",
                            "397:2:25"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43626,
                          "src": "392:7:25"
                        },
                        "referencedDeclaration": 43626,
                        "src": "392:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                          "typeString": "Base.FE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43822,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 43817,
                            "name": "Base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43679,
                            "src": "417:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Base_$43679_$",
                              "typeString": "type(library Base)"
                            }
                          },
                          "id": 43818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "422:7:25",
                          "memberName": "MODULUS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43635,
                          "src": "417:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 43819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "432:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "417:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 43814,
                          "name": "Base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43679,
                          "src": "404:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Base_$43679_$",
                            "typeString": "type(library Base)"
                          }
                        },
                        "id": 43815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "409:2:25",
                        "memberName": "FE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43626,
                        "src": "404:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_FE_$43626_$",
                          "typeString": "type(Base.FE)"
                        }
                      },
                      "id": 43816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "412:4:25",
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "404:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_FE_$43626_$",
                        "typeString": "function (uint256) pure returns (Base.FE)"
                      }
                    },
                    "id": 43821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "404:30:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                      "typeString": "Base.FE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "392:42:25"
                },
                {
                  "assignments": [
                    43827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43827,
                      "mutability": "mutable",
                      "name": "one",
                      "nameLocation": "452:3:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 43854,
                      "src": "444:11:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                        "typeString": "Base.FE"
                      },
                      "typeName": {
                        "id": 43826,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 43825,
                          "name": "Base.FE",
                          "nameLocations": [
                            "444:4:25",
                            "449:2:25"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43626,
                          "src": "444:7:25"
                        },
                        "referencedDeclaration": 43626,
                        "src": "444:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                          "typeString": "Base.FE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43833,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "471:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 43828,
                          "name": "Base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43679,
                          "src": "458:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Base_$43679_$",
                            "typeString": "type(library Base)"
                          }
                        },
                        "id": 43829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "463:2:25",
                        "memberName": "FE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43626,
                        "src": "458:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_FE_$43626_$",
                          "typeString": "type(Base.FE)"
                        }
                      },
                      "id": 43830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "466:4:25",
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "458:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_FE_$43626_$",
                        "typeString": "function (uint256) pure returns (Base.FE)"
                      }
                    },
                    "id": 43832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:15:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                      "typeString": "Base.FE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "444:29:25"
                },
                {
                  "assignments": [
                    43838
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43838,
                      "mutability": "mutable",
                      "name": "q_plus_one",
                      "nameLocation": "492:10:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 43854,
                      "src": "484:18:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                        "typeString": "Base.FE"
                      },
                      "typeName": {
                        "id": 43837,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 43836,
                          "name": "Base.FE",
                          "nameLocations": [
                            "484:4:25",
                            "489:2:25"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43626,
                          "src": "484:7:25"
                        },
                        "referencedDeclaration": 43626,
                        "src": "484:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                          "typeString": "Base.FE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43843,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 43841,
                        "name": "one",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43827,
                        "src": "511:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                          "typeString": "Base.FE"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                          "typeString": "Base.FE"
                        }
                      ],
                      "expression": {
                        "id": 43839,
                        "name": "q",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43813,
                        "src": "505:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                          "typeString": "Base.FE"
                        }
                      },
                      "id": 43840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "507:3:25",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43649,
                      "src": "505:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_userDefinedValueType$_FE_$43626_$_t_userDefinedValueType$_FE_$43626_$returns$_t_userDefinedValueType$_FE_$43626_$attached_to$_t_userDefinedValueType$_FE_$43626_$",
                        "typeString": "function (Base.FE,Base.FE) pure returns (Base.FE)"
                      }
                    },
                    "id": 43842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "505:10:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                      "typeString": "Base.FE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "484:31:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43848,
                            "name": "q_plus_one",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43838,
                            "src": "549:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                              "typeString": "Base.FE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_FE_$43626",
                              "typeString": "Base.FE"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 43845,
                              "name": "Base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43679,
                              "src": "534:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Base_$43679_$",
                                "typeString": "type(library Base)"
                              }
                            },
                            "id": 43846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "539:2:25",
                            "memberName": "FE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43626,
                            "src": "534:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_FE_$43626_$",
                              "typeString": "type(Base.FE)"
                            }
                          },
                          "id": 43847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "542:6:25",
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "534:14:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_FE_$43626_$returns$_t_uint256_$",
                            "typeString": "function (Base.FE) pure returns (uint256)"
                          }
                        },
                        "id": 43849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "534:26:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "562:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "70203d3d2030206d6f642070",
                        "id": 43851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "565:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70305ca127f913e85626b54695dbe790d2690ab70fc2b9ed322068d9d15f1c5a",
                          "typeString": "literal_string \"p == 0 mod p\""
                        },
                        "value": "p == 0 mod p"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70305ca127f913e85626b54695dbe790d2690ab70fc2b9ed322068d9d15f1c5a",
                          "typeString": "literal_string \"p == 0 mod p\""
                        }
                      ],
                      "id": 43844,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "525:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 43852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "525:55:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43853,
                  "nodeType": "ExpressionStatement",
                  "src": "525:55:25"
                }
              ]
            },
            "functionSelector": "d0ce104a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_add_base",
            "nameLocation": "359:13:25",
            "parameters": {
              "id": 43807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "372:2:25"
            },
            "returnParameters": {
              "id": 43808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:25"
            },
            "scope": 43905,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43904,
            "nodeType": "FunctionDefinition",
            "src": "593:253:25",
            "nodes": [],
            "body": {
              "id": 43903,
              "nodeType": "Block",
              "src": "627:219:25",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    43862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43862,
                      "mutability": "mutable",
                      "name": "q",
                      "nameLocation": "647:1:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 43903,
                      "src": "637:11:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                        "typeString": "Scalar.FE"
                      },
                      "typeName": {
                        "id": 43861,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 43860,
                          "name": "Scalar.FE",
                          "nameLocations": [
                            "637:6:25",
                            "644:2:25"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43682,
                          "src": "637:9:25"
                        },
                        "referencedDeclaration": 43682,
                        "src": "637:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                          "typeString": "Scalar.FE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43871,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 43866,
                            "name": "Scalar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43735,
                            "src": "666:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Scalar_$43735_$",
                              "typeString": "type(library Scalar)"
                            }
                          },
                          "id": 43867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "673:7:25",
                          "memberName": "MODULUS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43691,
                          "src": "666:14:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 43868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "683:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "666:18:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 43863,
                          "name": "Scalar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43735,
                          "src": "651:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Scalar_$43735_$",
                            "typeString": "type(library Scalar)"
                          }
                        },
                        "id": 43864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "658:2:25",
                        "memberName": "FE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43682,
                        "src": "651:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_FE_$43682_$",
                          "typeString": "type(Scalar.FE)"
                        }
                      },
                      "id": 43865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "661:4:25",
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "651:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_FE_$43682_$",
                        "typeString": "function (uint256) pure returns (Scalar.FE)"
                      }
                    },
                    "id": 43870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "651:34:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                      "typeString": "Scalar.FE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "637:48:25"
                },
                {
                  "assignments": [
                    43876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43876,
                      "mutability": "mutable",
                      "name": "one",
                      "nameLocation": "705:3:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 43903,
                      "src": "695:13:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                        "typeString": "Scalar.FE"
                      },
                      "typeName": {
                        "id": 43875,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 43874,
                          "name": "Scalar.FE",
                          "nameLocations": [
                            "695:6:25",
                            "702:2:25"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43682,
                          "src": "695:9:25"
                        },
                        "referencedDeclaration": 43682,
                        "src": "695:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                          "typeString": "Scalar.FE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43882,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "726:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 43877,
                          "name": "Scalar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43735,
                          "src": "711:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Scalar_$43735_$",
                            "typeString": "type(library Scalar)"
                          }
                        },
                        "id": 43878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "718:2:25",
                        "memberName": "FE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43682,
                        "src": "711:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_FE_$43682_$",
                          "typeString": "type(Scalar.FE)"
                        }
                      },
                      "id": 43879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "721:4:25",
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "711:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_FE_$43682_$",
                        "typeString": "function (uint256) pure returns (Scalar.FE)"
                      }
                    },
                    "id": 43881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "711:17:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                      "typeString": "Scalar.FE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "695:33:25"
                },
                {
                  "assignments": [
                    43887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43887,
                      "mutability": "mutable",
                      "name": "q_plus_one",
                      "nameLocation": "749:10:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 43903,
                      "src": "739:20:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                        "typeString": "Scalar.FE"
                      },
                      "typeName": {
                        "id": 43886,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 43885,
                          "name": "Scalar.FE",
                          "nameLocations": [
                            "739:6:25",
                            "746:2:25"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43682,
                          "src": "739:9:25"
                        },
                        "referencedDeclaration": 43682,
                        "src": "739:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                          "typeString": "Scalar.FE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43892,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 43890,
                        "name": "one",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43876,
                        "src": "768:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                          "typeString": "Scalar.FE"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                          "typeString": "Scalar.FE"
                        }
                      ],
                      "expression": {
                        "id": 43888,
                        "name": "q",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43862,
                        "src": "762:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                          "typeString": "Scalar.FE"
                        }
                      },
                      "id": 43889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "764:3:25",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43705,
                      "src": "762:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_userDefinedValueType$_FE_$43682_$_t_userDefinedValueType$_FE_$43682_$returns$_t_userDefinedValueType$_FE_$43682_$attached_to$_t_userDefinedValueType$_FE_$43682_$",
                        "typeString": "function (Scalar.FE,Scalar.FE) pure returns (Scalar.FE)"
                      }
                    },
                    "id": 43891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "762:10:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                      "typeString": "Scalar.FE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "739:33:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43897,
                            "name": "q_plus_one",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43887,
                            "src": "808:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                              "typeString": "Scalar.FE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_FE_$43682",
                              "typeString": "Scalar.FE"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 43894,
                              "name": "Scalar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43735,
                              "src": "791:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Scalar_$43735_$",
                                "typeString": "type(library Scalar)"
                              }
                            },
                            "id": 43895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "798:2:25",
                            "memberName": "FE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43682,
                            "src": "791:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_FE_$43682_$",
                              "typeString": "type(Scalar.FE)"
                            }
                          },
                          "id": 43896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "801:6:25",
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "791:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_FE_$43682_$returns$_t_uint256_$",
                            "typeString": "function (Scalar.FE) pure returns (uint256)"
                          }
                        },
                        "id": 43898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "791:28:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "821:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "70203d3d2030206d6f642070",
                        "id": 43900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "824:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70305ca127f913e85626b54695dbe790d2690ab70fc2b9ed322068d9d15f1c5a",
                          "typeString": "literal_string \"p == 0 mod p\""
                        },
                        "value": "p == 0 mod p"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70305ca127f913e85626b54695dbe790d2690ab70fc2b9ed322068d9d15f1c5a",
                          "typeString": "literal_string \"p == 0 mod p\""
                        }
                      ],
                      "id": 43893,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2549,
                        2562,
                        2578,
                        2620,
                        2662,
                        2704,
                        2741,
                        2778,
                        2815,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "782:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 43901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:57:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43902,
                  "nodeType": "ExpressionStatement",
                  "src": "782:57:25"
                }
              ]
            },
            "functionSelector": "ee324929",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_add_scalar",
            "nameLocation": "602:15:25",
            "parameters": {
              "id": 43856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "617:2:25"
            },
            "returnParameters": {
              "id": 43857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "627:0:25"
            },
            "scope": 43905,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43805,
              "name": "Test",
              "nameLocations": [
                "339:4:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12254,
              "src": "339:4:25"
            },
            "id": 43806,
            "nodeType": "InheritanceSpecifier",
            "src": "339:4:25"
          }
        ],
        "canonicalName": "FieldsTest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43905,
          12254,
          12203,
          7739,
          7414,
          6621,
          4561,
          3823,
          2291,
          2357,
          2354
        ],
        "name": "FieldsTest",
        "nameLocation": "325:10:25",
        "scope": 43906,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2418,
          2423,
          2428,
          2435,
          2442,
          2449
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 25
}